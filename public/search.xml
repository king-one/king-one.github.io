<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[test]]></title>
      <url>/2017/04/28/test/</url>
      <content type="html"><![CDATA[<p>##测试</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[hexo博客快速搭建]]></title>
      <url>/2017/04/28/hexo%E5%8D%9A%E5%AE%A2%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA/</url>
      <content type="html"><![CDATA[<h3 id="1-全局安装hexo"><a href="#1-全局安装hexo" class="headerlink" title="1.全局安装hexo"></a>1.全局安装hexo</h3><pre><code class="bash">$ npm install hexo-cli -g
</code></pre>
<h3 id="2-查看是否安装成功"><a href="#2-查看是否安装成功" class="headerlink" title="2.查看是否安装成功"></a>2.查看是否安装成功</h3><pre><code class="bash">$ hexo -v
</code></pre>
<h3 id="3-初始化博客目录"><a href="#3-初始化博客目录" class="headerlink" title="3.初始化博客目录"></a>3.初始化博客目录</h3><p>在你设置的博客文件夹 如D:\hexo\blog  进行gitBash</p>
<pre><code class="bash">$ hexo init
</code></pre>
<p> .初始化后得到的目录如下：</p>
<pre><code class="bash">├── _config.yml
├── package.json  
├── scaffolds
├── source
|   ├── _drafts
|   └── _posts
└── themes
</code></pre>
<a id="more"></a>
<h4 id="config-yml"><a href="#config-yml" class="headerlink" title="_config.yml"></a>_config.yml</h4><p>网站的配置信息，您可以在此配置大部分的参数。</p>
<h4 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h4><p>依赖包配置文件</p>
<h4 id="scaffolds"><a href="#scaffolds" class="headerlink" title="scaffolds"></a>scaffolds</h4><p>模版 文件夹。当您新建文章时，Hexo 会根据 <strong>scaffold</strong> 来建立文件。Hexo的模板是指在新建的markdown文件中默认填充的内容。例如，如果您修改scaffold/post.md中的Front-matter内容，那么每次新建一篇文章时都会包含这个修改。</p>
<h4 id="source"><a href="#source" class="headerlink" title="source"></a>source</h4><p>资源文件夹是存放用户资源的地方。除<strong> _posts</strong> 文件夹之外，开头命名为 _ (下划线)的文件 / 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 public 文件夹，而其他文件会被拷贝过去。</p>
<h4 id="themes"><a href="#themes" class="headerlink" title="themes"></a>themes</h4><p>主题文件夹。Hexo 会根据主题来生成静态页面。</p>
<pre><code class="bash">$ npm install
</code></pre>
<h3 id="5-服务器"><a href="#5-服务器" class="headerlink" title="5.服务器"></a>5.服务器</h3><p>本地安装hexo-server</p>
<pre><code class="bash">$ npm install hexo-server --save
</code></pre>
<h3 id="6-预览网页"><a href="#6-预览网页" class="headerlink" title="6.预览网页"></a>6.预览网页</h3><pre><code class="bash">$ hexo server
</code></pre>
<p>我们会看到这样一条提示：</p>
<pre><code class="bash">INFO  Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop.
</code></pre>
<p>打开浏览器访问<a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a> 就可以看到了</p>
<h3 id="7-配置信息"><a href="#7-配置信息" class="headerlink" title="7.配置信息"></a>7.配置信息</h3><p>找到博客根目录下的配置文件_config.yml，用自己喜欢的文本编辑器编辑它。看到# Site的那一部分，里面的title就是博客的名字，subtitle就是副标题，author对应的那个就是作者名字还有很多配置项可以修改，这里就不详细讲了，可以查看Hexo官方文档对照着修改配置。</p>
<h3 id="8-更换主题"><a href="#8-更换主题" class="headerlink" title="8.更换主题"></a>8.更换主题</h3><p> 创建 Hexo 主题非常容易，您只要在 themes 文件夹内，新增一个任意名称的文件夹，并修改 _config.yml 内的 theme 设定，即可切换主题。可以查看Hexo官方文档对照着修改主题配置。</p>
<h3 id="9-写新文章"><a href="#9-写新文章" class="headerlink" title="9.写新文章"></a>9.写新文章</h3><p>执行下面这条命令来创建一篇新文章「First」：</p>
<pre><code class="bash">$ hexo new &quot;First&quot;
</code></pre>
<p>然后会提示我们新建的文章所在路径：</p>
<pre><code class="bash">INFO  Created: E:\blog\source\_posts\Hello.md
</code></pre>
<p>我们找到这个文件之后用Markdown编辑器或其他文本编辑器进行编辑。</p>
<pre><code>title: Hello
date: 2015-12-13 15:04:33
tags:
---
## 你好
#### 这是我的第一篇文章
</code></pre><p>这是由模板生成的Front-Matter，在—前面的是文章的一些基本信息例如标题、日期及标签，还能添加其他一些选项如分类，我们后面有机会再来说说。</p>
<p><u>文字</u></p>
<p>！！！markdown 语法标记美容间需要有空格，这样才能解析</p>
<p>我们的文章内容要写在—下面，写了个你好看看效果：</p>
<h3 id="10-生成页面"><a href="#10-生成页面" class="headerlink" title="10.生成页面"></a>10.生成页面</h3><p>文章写好了怎么看效果呢？只需要下面这一条命令就可以将我们写的Markdown文件 (.md后缀) 转换成.html静态页面了：</p>
<pre><code>$ hexo generate
</code></pre><h3 id="11-上传到git或者虚拟主机"><a href="#11-上传到git或者虚拟主机" class="headerlink" title="11.上传到git或者虚拟主机"></a>11.上传到git或者虚拟主机</h3><p>我是用ftp工具上传的 hexo 的ftp上传插件一直报如下错误，</p>
<pre><code class="bash">Error: read ECONNRESET
at exports._errnoException (util.js:1022:11)
at TCP.onread (net.js:569:26)
</code></pre>
<p>果断放弃了ftp,改用git上传工具<br>上传后可能会发现样式和js文件丢失 那你就要检查一下<strong>_conifg.yml</strong>文件中设置 的<strong>root</strong>路径是否和虚拟主机的文件路径是否吻合</p>
<h3 id="12-如何生成文章摘要"><a href="#12-如何生成文章摘要" class="headerlink" title="12.如何生成文章摘要"></a>12.如何生成文章摘要</h3><p>默认情况下<strong>hexo</strong>博客(如本站)的首页显示的是完整的文章 而文章比较长的时候怎么样才能只显示个摘要只要加入一个<br><code>&lt;!-- more --&gt;</code>占位符在文章正文里面即可：</p>
<pre><code class="bash">这就是一个文章简介
&lt;!-- more --&gt;
更多的文字内容
</code></pre>
<p>这里更多的内容</p>
<h3 id="12-一些问题"><a href="#12-一些问题" class="headerlink" title="12.一些问题"></a>12.一些问题</h3><p>如果发现git上传失败就要考虑一下仓库地址用户名密码是否正确，下面就是我填错仓库地址后报的<font color="#4590a3" size="2px">403</font> 错误</p>
<pre><code class="bash">FATAL Something&amp;#39;s wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html
Error: remote: Permission to imsofter/imsofter.github.io.git denied to king-one.
fatal: unable to access &#39;https://github.com/imsofter/imsofter.github.io.git/&#39;: The requested URL returned error: 403
at ChildProcess.&lt;anonymous&gt; (d:\hexo\blog\node_modules\hexo-util\lib\spawn.js:37:17)
at emitTwo (events.js:106:13)
at ChildProcess.emit (events.js:191:7)
at ChildProcess.cp.emit (d:\hexo\blog\node_modules\cross-spawn\lib\enoent.js:40:29)
at maybeClose (internal/child_process.js:877:16)
at Process.ChildProcess._handle.onexit (internal/child_process.js:226:5)
FATAL remote: Permission to imsofter/imsofter.github.io.git denied to king-one.
</code></pre>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
